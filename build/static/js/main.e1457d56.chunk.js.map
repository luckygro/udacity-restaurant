{"version":3,"sources":["components/header.js","components/map.js","components/rating.js","Restaurant.js","components/restaurant.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","alt","to","RestaurantMarker","item","Marker","position","latlng","lat","lng","Popup","id","name","OverviewMap","restaurants","aria-hidden","tabIndex","Map","center","zoom","scrollWheelZoom","TileLayer","url","mapboxToken","attribution","maxZoom","length","map","restaurant","key","Rating","count","RestaurantPage","props","match","params","selectedRestaurant","openingHours","allRestaurants","dataJSON","this","filter","getOpeningHours","i","days","Object","keys","operating_hours","time","values","tmp","push","getRestaurant","init","src","photograph","cuisine_type","address","hours","day","reviews","review","rating","date","comments","React","Component","RestaurantThumb","neighborhood","Home","DATABASE_URL","allNeighborhood","allCuisine","selectedRestaurants","state","filterNeighborhood","filterCuisine","handleNeighborhoodChange","bind","handleCuisineChange","updateRestaurants","tmpNeighborhoods","v","indexOf","tmpCuisines","cuisine","results","r","event","setState","target","value","getRestaurants","getNeighborhoods","getCuisines","action","onChange","AppRouter","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e1457d56.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <header className=\"\">\n\n    <h1 className=\"container\">\n    \t<Link alt=\"link to starting page\" to=\"/\">Restaurant Review App</Link>\n\t</h1>\n  </header>\n);\n\nexport default Header;\n","import React from 'react'\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport { Link } from 'react-router-dom';\n\nconst RestaurantMarker = ({item}) => {\n\n\treturn (\n\t\t<Marker position={[item.latlng.lat, item.latlng.lng]}>\n\t      \t<Popup><Link to={`/${item.id}`}>{item.name}</Link></Popup>\n\t    </Marker>\n\t)\n}\n\n\nconst OverviewMap = ({restaurants}) => {\n\n\tlet defaultPosition = [40.722216, -73.987501];\n\n\treturn (\n\n\t\t// hide map from screen reader - redundant information, use restaurant overview instead\n\t\t<section id=\"OverviewMap\" aria-hidden=\"true\" tabIndex={-1}>\n\t\t\t<Map center={defaultPosition} zoom={12} scrollWheelZoom={false}>\n\t\t\t\t<TileLayer\n\t\t\t\t  url=\"https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}\"\n\t\t\t\t  mapboxToken=\"pk.eyJ1IjoibHVja3lncm8iLCJhIjoiY2p6bXUwYzZuMGM0dTNjbngzN2wzZ2lmcSJ9.TXA1Ha-Cpot9JKZgmTp_bg\"\n\t\t\t\t  attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n\t\t\t\t  maxZoom={18}\n\t\t\t\t  id=\"mapbox.streets\"\n\t\t\t\t/>\n\n\t\t\t\t{(restaurants.length > 0) ? (\n\t\t\t\t\trestaurants.map(restaurant => (\n\t\t\t\t\t\t\t<RestaurantMarker key={restaurant.id} item={restaurant} />\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t) : null}\n\n\t\t\t\t\n\n\t\t\t</Map>\n\t \t</section>\n\t)\n}\n\nexport default OverviewMap;\n","import React from 'react';\n\nconst Rating = ({count}) => {\n\tswitch (count) {\n\t\tcase 1: return (\n\t\t\t<div className=\"rating\">\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t</div>\n\t\t)\n\t\tcase 2: return (\n\t\t\t<div className=\"rating\">\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t</div>\n\t\t)\n\t\tcase 3: return (\n\t\t\t<div className=\"rating\">\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t</div>\n\t\t)\n\t\tcase 4: return (\n\t\t\t<div className=\"rating\">\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t</div>\n\t\t)\n\t\tcase 5: return (\n\t\t\t<div className=\"rating\">\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t\t<span className=\"sA\" />\n\t\t\t</div>\n\t\t)\n\t\tdefault: return (\n\t\t\t<div className=\"rating\">\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t\t<span className=\"sI\" />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Rating;\n","import React from 'react';\n\nimport Header from './components/header';\nimport OverviewMap from './components/map';\nimport Rating from './components/rating';\n\nimport dataJSON from './data/restaurants.json';\n\nimport './Restaurant.scss'\n\n\nclass RestaurantPage extends React.Component {\n\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.id = this.props.match.params.id;\n\t\tthis.selectedRestaurant = '';\n\t\tthis.openingHours = [];\n\t}\n\n\tgetRestaurant() {\n\t\tconst allRestaurants = dataJSON.restaurants;\n\t\tthis.selectedRestaurant = allRestaurants.filter(restaurant => restaurant.id == this.id)[0];\n\t\tthis.getOpeningHours();\n\t}\n\n\tgetOpeningHours() {\n\t\tconst days = Object.keys(this.selectedRestaurant.operating_hours);\n\t\tconst time = Object.values(this.selectedRestaurant.operating_hours);\n\t\t\n\t\tconst tmp = [];\n\t\tvar i;\n\t\tfor (i=0; i < days.length; i++) {\n\t\t\ttmp.push({'day': days[i], 'time': time[i]})\n\t\t} \n\n\t\tthis.openingHours = tmp;\n\n\t}\n\n\tinit() {\n\t\tthis.getRestaurant();\n\t}\n\n\n\n\trender () {\n\n\t\tthis.init();\n\n\t\treturn (\n\t\t    <div id=\"RestaurantPage\" className=\"App\">\t\n\t\t\t\t<Header />\n\t\t    \t<OverviewMap restaurants={[this.selectedRestaurant]} />\n\n\t\t    \t<section id=\"RestDescription\" className=\"container\">\n\t\t    \t\t<h2>{this.selectedRestaurant.name}</h2>\n\t\t    \t\t<img src={`/img/${this.selectedRestaurant.photograph}`} alt={this.selectedRestaurant.name}/>\n\n\n\t\t    \t\t<div className=\"rest-about\">\n\t\t    \t\t\t<h3>About</h3>\n\n\t\t    \t\t\t<span className=\"icon-pseudo rest-ab-cuisine\">{this.selectedRestaurant.cuisine_type}</span>\n\t\t    \t\t\t<span className=\"icon-pseudo rest-ab-address\">{this.selectedRestaurant.address}</span>\n\n\t\t    \t\t</div>\n\n\t\t    \t\t<div className=\"rest-openinghours\">\n\t\t    \t\t\t<h3>Operating Hours</h3>\n\t\t    \t\t\t{\n\t\t    \t\t\t\tthis.openingHours.map(hours => (\n\t\t    \t\t\t\t\t<div key={hours.day}>\n\t\t    \t\t\t\t\t\t<span className=\"rest-op-day\">{hours.day}:</span>\n\t\t    \t\t\t\t\t\t<span className=\"rest-op-time\">{hours.time}</span>\n\t\t    \t\t\t\t\t</div>\n\t\t    \t\t\t\t))\n\n\t\t    \t\t\t}\n\t\t    \t\t</div>\n\n\t\t    \t\t<div className=\"rest-reviews\">\n\t\t    \t\t\t<h3>Reviews</h3>\n\n\t\t    \t\t\t{ this.selectedRestaurant.reviews.map(review => (\n\t\t    \t\t\t\t<div className=\"rest-review\" key={review.name}>\n\t\t    \t\t\t\t\t<Rating count={review.rating} />\n\t\t    \t\t\t\t\t<span className=\"icon-pseudo rest-rv-name\">{review.name}</span>\n\t\t    \t\t\t\t\t<span className=\"icon-pseudo rest-rv-date\">{review.date}</span>\n\t\t    \t\t\t\t\t<p className=\"rest-rv-comment\">{review.comments}</p>\n\t\t    \t\t\t\t</div>\n\n\t\t    \t\t\t))}\n\n\t    \t\t\t</div>\n\t\t    \t</section>\n\t\t    </div>\n\t\t)\n\n\t}\n\n}\n\nexport default RestaurantPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst RestaurantThumb = ({restaurant}) => (\n\n\t<Link className=\"restaurant-thumb\" to={`/${restaurant.id}`}>\n\t  \t<img src={`/img/${restaurant.photograph}`} alt={restaurant.name} />\n\t  \t<div className=\"restaurant-content\">\n\t\t    <h4>{restaurant.name}</h4>\n\t\t    <span className=\"restaurant-neighborhood\">{restaurant.neighborhood}</span>\n\t\t    <span className=\"restaurant-address\">{restaurant.address}</span>\n\t    </div>\n  </Link>\n);\n\nexport { RestaurantThumb };\n","import React from 'react';\n\nimport Header from './components/header';\nimport OverviewMap from './components/map';\nimport { RestaurantThumb } from './components/restaurant';\n\nimport './Home.scss';\n\nimport dataJSON from './data/restaurants.json';\n\n\nclass Home extends React.Component {\n\n\tconstructor (props) {\n\n\t\tsuper(props);\n\n\t\tthis.DATABASE_URL = './data/restaurants.json';\n\n\t\tthis.allRestaurants = [];\n\t\tthis.allNeighborhood = [];\n\t\tthis.allCuisine =[];\n\t\tthis.selectedRestaurants = [];\n\n\t\t// state\n\t\tthis.state = {\n\t\t\tfilterNeighborhood: '',\n\t\t\tfilterCuisine: '', \n\t\t}\n\n\t\t// bind this for Event Handler\n\t\tthis.handleNeighborhoodChange = this.handleNeighborhoodChange.bind(this);\n\t\tthis.handleCuisineChange = this.handleCuisineChange.bind(this);\n\t}\n\n\tgetRestaurants() {\n\t\tthis.allRestaurants = dataJSON.restaurants;\n\t\tthis.updateRestaurants();\n\t}\n\n\tgetNeighborhoods() {\n\t\tconst tmpNeighborhoods = this.allRestaurants.map((v, i) => this.allRestaurants[i].neighborhood)\n        // Remove duplicates from neighborhoods\n        this.allNeighborhood = tmpNeighborhoods.filter((v, i) => tmpNeighborhoods.indexOf(v) === i)\n\t}\n\tgetCuisines() {\n\t\tconst tmpCuisines = this.allRestaurants.map((v, i) => this.allRestaurants[i].cuisine_type)\n        // Remove duplicates from neighborhoods\n        this.allCuisine = tmpCuisines.filter((v, i) => tmpCuisines.indexOf(v) === i)\n\t}\n\n\tupdateRestaurants() {\n\n\t\t// fetch data\n\t\tlet cuisine = this.state.filterCuisine;\n\t\tlet neighborhood = this.state.filterNeighborhood;\n\t\tlet results = this.allRestaurants;\n\n\t\t// filter by cuisine\n\t\tif (cuisine) { \n          results = results.filter(r => r.cuisine_type === cuisine);\n        }\n\n        // filter by neighborhood\n        if (neighborhood) { \n          results = results.filter(r => r.neighborhood === neighborhood);\n        }\n\t\t\n\t\t// store result\n\t\tthis.selectedRestaurants = results;\n\t\t//this.setState({selectedRestaurants: results})\n\t}\n\n\thandleNeighborhoodChange(event) {\n\t\tthis.setState({filterNeighborhood: event.target.value});\n\t\tthis.updateRestaurants();\n\t}\n\n\thandleCuisineChange(event) {\n\t\tthis.setState({filterCuisine: event.target.value});\n\t\tthis.updateRestaurants();\n\t}\n\n\tinit() {\n\t\tthis.getRestaurants();\n\t\tthis.getNeighborhoods();\n\t\tthis.getCuisines();\n\t}\n\n\trender() {\n\n\t\tthis.init();\n\n\t\treturn (\n\t\t    <div className=\"App\">\n\t\t\t\t<Header />\n\t\t\t\t<OverviewMap restaurants={this.selectedRestaurants} />\n\n\t\t      \t<form id=\"MapFilter\" className=\"container\" action=\"\">\n\t      \t\t\t<label>\n\t      \t\t\t\tNeighborhood\n\n\t      \t\t\t\t<select\n\t\t      \t\t\t\tname=\"Filter by Neighborhood\"\n\t\t      \t\t\t\tonChange={this.handleNeighborhoodChange}\n\t\t      \t\t\t\tvalue={this.state.filterNeighborhood}\n\t\t      \t\t\t\t>\n\t      \t\t\t\t\t\t<option value=\"\">all</option>\n\t\t      \t\t\t\t\t{this.allNeighborhood.map(neighborhood => (\n\t\t      \t\t\t\t\t\t<option key={neighborhood} value={neighborhood}>{neighborhood}</option>\n\t\t      \t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t      \t\t\t</label>\n\t      \t\t\t<label>\n\t      \t\t\t\tCuisine\n\t\t\t\t\t\t<select\n\t\t      \t\t\t\tname=\"Filter by Cuisine\"\n\t\t      \t\t\t\tonChange={this.handleCuisineChange}\n\t\t      \t\t\t\tvalue={this.state.filterCuisine}\n\t\t      \t\t\t\t>\n\t      \t\t\t\t\t\t<option value=\"\">all</option>\n\t\t      \t\t\t\t\t{this.allCuisine.map(cuisine => (\n\t\t      \t\t\t\t\t\t<option key={cuisine} value={cuisine}>{cuisine}</option>\n\t\t      \t\t\t\t\t))}\n\t\t\t\t\t\t</select>\t      \t\t\t\n\t\t\t\t\t</label>\n\t\t      \t</form>\n\n\t\t      \t<section id=\"RestaurantPreview\" className=\"container\">\n\n\t\t      \t{(this.selectedRestaurants.length > 0) ? (\n\t\t      \t\t\tthis.selectedRestaurants.map(restaurant => (\n\t\t\t      \t\t\t<RestaurantThumb key={restaurant.id} restaurant={restaurant} />\n\t\t\t      \t\t))\n\t\t      \t\t) : (\n\t\t      \t\t\t<span>We fond no restaurants matching your settings - Sorry!</span>\n\t\t      \t\t)\n\t\t      \t}\n\t\t      \t\t\n\t\t      \t</section>\n\t\t    </div>\t\n\n\n\t    )\t\n  \t}\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport RestaurantPage from './Restaurant';\nimport Home from './Home';\n\nimport './App.scss';\n\nclass AppRouter extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t        <Route path=\"/:id\" component={RestaurantPage} />\n\t\t\t</Router>\n\t\t)\n\t}\n\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}